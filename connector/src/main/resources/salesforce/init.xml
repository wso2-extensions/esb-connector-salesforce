<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="init"
          xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="username" description="The username for the salesforce account"/>
    <parameter name="password"
               description="The password is the combinations of the user password and the security token for salesforce"/>
    <parameter name="loginUrl" description="The login URL to get the user access"/>
    <parameter name="forceLogin" description="The forceLogin parameter"/>
    <parameter name="blocking"
               description="The blocking parameter is helping connector performs the blocking invocations to Salesforce"/>
    <sequence>
        <class name="org.wso2.carbon.connector.salesforce.SetupLoginParams"/>
        <filter xpath="get-property('operation','salesforce.login.done') = 'true'">
            <then>
                <log level="custom">
                    <property name="Connection" value="Already login to Salesforce ....."/>
                </log>
            </then>
            <else>
                <enrich>
                    <source clone="true" type="body"/>
                    <target property="ORIGINAL_MSG_PAYLOAD" type="property"/>
                </enrich>
                <property expression="$func:loginUrl" name="uri.var.salesforce.url"/>
                <header name="Action" value="urn:partner.soap.sforce.com/Soap/loginRequest"/>
                <payloadFactory>
                    <format>
                        <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
                                          xmlns:urn="urn:partner.soap.sforce.com">
                            <soapenv:Body>
                                <urn:login>
                                    <urn:username>$1</urn:username>
                                    <urn:password>$2</urn:password>
                                </urn:login>
                            </soapenv:Body>
                        </soapenv:Envelope>
                    </format>
                    <args>
                        <arg expression="$func:username"/>
                        <arg expression="$func:password"/>
                    </args>
                </payloadFactory>
                <log level="custom">
                    <property name="Connection" value="Login to Salesforce ....."/>
                </log>
                <property name="FORCE_ERROR_ON_SOAP_FAULT" value="true"/>
                <property name="messageType" scope="axis2" value="text/xml"/>
                <!-- <call> <endpoint> <http method="POST" uri-template="{uri.var.salesforce.url}">
                    <timeout> <duration>60000</duration> <responseAction>fault</responseAction>
                    </timeout> <suspendOnFailure> <initialDuration>2000</initialDuration> <progressionFactor>1.0</progressionFactor>
                    <maximumDuration>3000</maximumDuration> </suspendOnFailure> </http> </endpoint>
                    </call> -->
                <property name="SALESFORCE_BLOCKING" expression="$func:blocking"/>
                <property value="true" name="FORCE_ERROR_ON_SOAP_FAULT"/>
                <property name="HTTP_METHOD" scope="axis2" value="POST"/>
                <property name="Accept-Encoding" scope="transport" action="remove"/>
                <header name="To" expression="$ctx:uri.var.salesforce.url"/>
                <header name="Content-Encoding" action="remove" scope="transport"/>
                <filter source="$ctx:SALESFORCE_BLOCKING" regex="true">
                    <then>
                        <call blocking="true">
                            <endpoint>
                                <default format="soap11">
                                    <timeout>
                                        <duration>60000</duration>
                                        <responseAction>fault</responseAction>
                                    </timeout>
                                    <suspendOnFailure>
                                        <initialDuration>2000</initialDuration>
                                        <progressionFactor>1.0</progressionFactor>
                                        <maximumDuration>3000</maximumDuration>
                                    </suspendOnFailure>
                                </default>
                            </endpoint>
                        </call>
                    </then>
                    <else>
                        <call>
                            <endpoint>
                                <default format="soap11">
                                    <timeout>
                                        <duration>60000</duration>
                                        <responseAction>fault</responseAction>
                                    </timeout>
                                    <suspendOnFailure>
                                        <initialDuration>2000</initialDuration>
                                        <progressionFactor>1.0</progressionFactor>
                                        <maximumDuration>3000</maximumDuration>
                                    </suspendOnFailure>
                                </default>
                            </endpoint>
                        </call>
                    </else>
                </filter>
                <property name="FORCE_ERROR_ON_SOAP_FAULT" value="false"/>
                <property expression="//ns:loginResponse/ns:result/ns:sessionId/text()"
                          name="salesforce.sessionId" scope="operation" type="STRING"
                          xmlns:ns="urn:partner.soap.sforce.com"/>
                <property expression="//ns:loginResponse/ns:result/ns:serverUrl/text()"
                          name="salesforce.serviceUrl" scope="operation" type="STRING"
                          xmlns:ns="urn:partner.soap.sforce.com"/>
                <property expression="//ns:loginResponse/ns:result/ns:userInfo/ns:sessionSecondsValid/text()"
                          name="salesforce.sessionvalidity" scope="operation" type="STRING"
                          xmlns:ns="urn:partner.soap.sforce.com"/>
                <property name="salesforce.login.done" scope="operation"
                          type="STRING" value="true"/>
                <property name="salesforce.login.addToCache" scope="operation"
                          type="STRING" value="true"/>
                <class name="org.wso2.carbon.connector.salesforce.SetupLoginParams"/>
                <enrich>
                    <source clone="true" type="body"/>
                    <target property="SALESFORCE_LOGIN_RESPONSE" type="property"/>
                </enrich>
                <enrich>
                    <source clone="true" property="ORIGINAL_MSG_PAYLOAD" type="property"/>
                    <target type="body"/>
                </enrich>
            </else>
        </filter>
    </sequence>
</template>
